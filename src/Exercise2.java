public class Exercise2 {
    /*Написать функцию которая создает массив интов размером size. Числа в массиве идут по возрастанию от 1 до size.

С помощью этой функции создайте массив с size равным 80 000 000.

Подсчет
для каждого элемента массива подсчитать result = sin(x) + cos(x), где x - итый элемент массива. Вывести в консоль сумму всех result для всего массива. Распараллельте эту логику на потоки для ускорения вычислений.

Пользователю надо ввести N в консоль. N это кол-во раз, сколько надо повторить Подсчет. Одновременно в программе может быть запущено только вычисление одного Подсчета. Но при этом саму итерацию подсчета нужно параллелить.

Программа должна во время одного запуска отработать в двух режимах. И подсчитывать время которое она затратила на каждый из режимов работы:
Режим Thread. Программа для работы создает Thread-ы.
Режим Thread Pool. Программа использует один thread pool  единожды созданный.
Режим Thread и Thread Pool не могут работать одновременно друг с другом. Только по очереди.
*/
    public static void main(String[] args) throws InterruptedException {

        long timeOnStart = System.currentTimeMillis();
        int arr[]=createArray(80000000);
        System.out.println(System.currentTimeMillis()-timeOnStart);
    }

    static int[] createArray(int size){
        int arr[]= new int[size];
        return arr;
    }
}
